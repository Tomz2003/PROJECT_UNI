# -*- coding: utf-8 -*-
"""XLA.LAB3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_ssG-Q5ndzWSJyxpWlRPEYm_puDpMDkA
"""

import numpy as np
import imageio.v2 as iio
import matplotlib.pylab as plt
data = iio.imread('fruit.jpg')
bmg = data [800:1200, 570:980]
print (data.shape)
iio.imsave('orange.jpg', bmg)
plt.imshow (bmg)
plt.show ()

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('fruit.jpg', mode='F')
bdata = nd.shift(data, (100, 25))
plt.imshow(bdata, cmap='gray')
plt.axis('off')
plt.show()

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pylab as plt
data = iio.imread('fruit.jpg')
print (data.shape)
bdata = nd.zoom(data, 2)
print (bdata.shape)
data2 = nd.zoom (data, (2, 2, 1))
print (data2.shape)
data3 = nd.zoom(data, (0.5, 0.9, 1))
plt.imshow (data3)
plt.show ()

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('fruit.jpg')
d1 = nd.rotate(data, 20)
plt.imshow(d1)
plt.show()
d2 = nd.rotate(data, 20, reshape=False)
plt.imshow(d2)
plt.show()

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('world_cup.jpg', mode='F')
binary_data = (data > 0.5).astype(np.uint8)
print(data.shape)
d1 = nd.binary_dilation(binary_data)
plt.imshow(d1, cmap='gray')
plt.show()
d2 = nd.binary_dilation(binary_data, iterations=3)
plt.imshow(d2, cmap='gray')
plt.show()

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('world_cup.jpg', mode='F')
print(data.shape)
V, H = data.shape
M = np.indices((V, H))
d = 5
q = 2 * d * np.random.randn(*M.shape) - d
mp = (M + q).astype(int)
dl = nd.map_coordinates(data, mp, order=1)
plt.imshow(dl, cmap='gray')
plt.show()

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pylab as plt
def GeoFun(outcoord):
    a = outcoord[0] + 10 * np.cos(outcoord[0] / 10.0)  # Biến dạng theo chiều dọc (y)
    b = outcoord[1] + 10 * np.cos(outcoord[1] / 10.0)  # Biến dạng theo chiều ngang (x)
    return a, b
data = iio.imread('world_cup.jpg',  mode='F')
dl = nd.geometric_transform(data, GeoFun)
plt.imshow (dl)
plt.show ()

"""Bài tập 1"""

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('fruit.jpg')
strawberry = data[400:600, 600:800]
print(data.shape)
iio.imsave('strawberry.jpg', strawberry)
plt.imshow(strawberry)
plt.show()

"""Câu 2"""

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('fruit.jpg')
melon = data[50:450, 100:550]
apple = data[950:1250, 1450:1750]

melon_modified = melon[:, :, [1, 0, 2]]
apple_modified = apple[:, :, [2, 1, 0]]
iio.imsave('melon_modified.jpg', melon_modified)
iio.imsave('apple_modified.jpg', apple_modified)

plt.subplot(1, 2, 1)
plt.imshow(melon_modified)
plt.subplot(1, 2, 2)
plt.imshow(apple_modified)
plt.show()

"""Câu 3"""

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('quang_ninh.jpg')
mountain = data[50:400, 460:700]
boat = data[480:590, 500:680]
rotated_mountain = nd.rotate(mountain, 45, reshape=True)
rotated_boat = nd.rotate(boat, 45, reshape=True)
iio.imsave('mountain_rotated.jpg', rotated_mountain)
iio.imsave('boat_rotated.jpg', rotated_boat)

plt.subplot(1, 2, 1)
plt.imshow(rotated_mountain)
plt.subplot(1, 2, 2)
plt.imshow(rotated_boat)
plt.show()

"""Câu 4

"""

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt
data = iio.imread('pagoda.jpg')
pagoda = data[100:500, 200:600]
zoomed_pagoda = nd.zoom(pagoda, (5, 5, 1))
iio.imsave('pagoda_zoomed.jpg', zoomed_pagoda)
plt.imshow(zoomed_pagoda)
plt.show()

"""Caau 5

"""

import numpy as np
import scipy.ndimage as nd
import imageio.v2 as iio
import matplotlib.pyplot as plt

def translate_image(img, dx, dy):
    return nd.shift(img, (dy, dx, 0), mode='nearest')

def rotate_image(img, angle):
    return nd.rotate(img, angle, reshape=True)

def zoom_image(img, scale):
    return nd.zoom(img, (scale, scale, 1))

def coordinate_map(img):
    height, width = img.shape[:2]
    y_coords, x_coords = np.indices((height, width))
    noise = 10 * np.random.randn(2, height, width)
    new_coords = np.array([y_coords + noise[0], x_coords + noise[1]])
    distorted_img = nd.map_coordinates(img, new_coords, order=1)
    return distorted_img

def color_swap(img, mode):
    if mode == 'RG':
        return img[:, :, [1, 0, 2]]
    elif mode == 'RB':
        return img[:, :, [2, 1, 0]]

def get_float_input(prompt):
    while True:
        try:
            return float(input(prompt))
        except ValueError:
            print("Lỗi: Vui lòng nhập một số hợp lệ!")

def get_int_input(prompt):
    while True:
        try:
            return int(input(prompt))
        except ValueError:
            print("Lỗi: Vui lòng nhập một số nguyên!")

def get_choice_input(prompt, valid_choices):
    while True:
        choice = input(prompt).upper()
        if choice in valid_choices:
            return choice
        print(f"Lỗi: Vui lòng chọn một trong các giá trị {valid_choices}")

def main():
    print("Chọn ảnh để xử lý:")
    print("1. fruit.jpg")
    print("2. quang_ninh.jpg")
    print("3. pagoda.jpg")

    while True:
        try:
            choice = input("Nhập số (1-3): ")
            if choice == '1':
                img = iio.imread('fruit.jpg')
                break
            elif choice == '2':
                img = iio.imread('quang_ninh.jpg')
                break
            elif choice == '3':
                img = iio.imread('pagoda.jpg')
                break
            else:
                print("Lựa chọn không hợp lệ! Vui lòng nhập 1, 2 hoặc 3")
        except FileNotFoundError:
            print("Không tìm thấy file ảnh! Vui lòng kiểm tra lại")

    print("\nChọn phép biến đổi:")
    print("T - Tịnh tiến")
    print("X - Xoay")
    print("P - Phóng to")
    print("H - Thu nhỏ")
    print("C - Coordinate Map (Biến dạng ngẫu nhiên)")
    print("M - Đổi màu (Swap channels)")
    print("Q - Thoát chương trình")

    operation = get_choice_input("Nhập lựa chọn (T/X/P/H/C/M/Q): ", ['T', 'X', 'P', 'H', 'C', 'M', 'Q'])

    if operation == 'Q':
        print("Đã thoát chương trình!")
        return

    if operation == 'T':
        dx = get_int_input("Dịch theo chiều ngang (pixels): ")
        dy = get_int_input("Dịch theo chiều dọc (pixels): ")
        result = translate_image(img, dx, dy)
    elif operation == 'X':
        angle = get_float_input("Góc xoay (độ): ")
        result = rotate_image(img, angle)
    elif operation == 'P':
        scale = get_float_input("Tỉ lệ phóng to (vd: 2.0): ")
        result = zoom_image(img, scale)
    elif operation == 'H':
        scale = get_float_input("Tỉ lệ thu nhỏ (vd: 0.5): ")
        result = zoom_image(img, scale)
    elif operation == 'C':
        result = coordinate_map(img)
    elif operation == 'M':
        print("Chọn cách đổi màu:")
        print("1. Hoán đổi Red-Green")
        print("2. Hoán đổi Red-Blue")
        swap_choice = get_choice_input("Nhập số (1-2): ", ['1', '2'])
        if swap_choice == '1':
            result = color_swap(img, 'RG')
        elif swap_choice == '2':
            result = color_swap(img, 'RB')

    plt.imshow(result)
    plt.show()

    save = get_choice_input("Lưu ảnh? (y/n): ", ['Y', 'N']).lower()
    if save == 'y':
        iio.imsave('result.jpg', result)
        print("Đã lưu thành công!")

if __name__ == "__main__":
    main()